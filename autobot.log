==> Downloading https://ssl.icu-project.org/files/icu4c/59.1/icu4c-59_1-src.tgz
Already downloaded: /home/kali/.cache/Homebrew/icu4c-59.1.tgz
==> Verifying icu4c-59.1.tgz checksum
tar xzf /home/kali/.cache/Homebrew/icu4c-59.1.tgz
==> ./configure --prefix=/home/kali/.linuxbrew/Cellar/icu4c/59.1 --disable-samples --disable-tests --enable-static --with-library-bits=64
checking for ICU version numbers... release 59.1, library 59.1, unicode version 9.0
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking whether to build debug libraries... no
checking whether to build release libraries... yes
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc-6 accepts -g... yes
checking for gcc-6 option to accept ISO C89... none needed
checking whether we are using the GNU C++ compiler... yes
checking whether g++-6 accepts -g... yes
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.20... yes
checking for ICULEHB... no
checking how to run the C preprocessor... gcc-6 -E
checking for a BSD-compatible install... /usr/bin/install -c
checking for gmake... no
checking for gnumake... no
checking for doxygen... no
checking checking for executable suffix... 
checking whether strict compiling is on... yes
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking size of void *... 4
checking whether runnable 64 bit binaries are built by default... no
checking how to build 64-bit executables... yes
checking whether runnable 64-bit binaries are being built ... no
configure: error: Requested 64 bit binaries but could not compile and execute them. See readme.html for help with cross compilation., and set compiler options manually.

==> Formula
Path: /home/kali/.linuxbrew/Library/Taps/homebrew/homebrew-core/Formula/icu4c.rb
==> Configuration
HOMEBREW_VERSION: >1.2.0 (no git repository)
ORIGIN: https://github.com/Linuxbrew/brew
HEAD: 9c79fedcd105d6c11e14303681f1598587a13b46
Last commit: 28 hours ago
Core tap ORIGIN: https://github.com/Linuxbrew/homebrew-core
Core tap HEAD: 74b2b3e03df0b67f2251e53471a793d0b98a2d74
Core tap last commit: 3 minutes ago
HOMEBREW_PREFIX: /home/kali/.linuxbrew
HOMEBREW_REPOSITORY: /home/kali/.linuxbrew
HOMEBREW_CELLAR: /home/kali/.linuxbrew/Cellar
HOMEBREW_BOTTLE_DOMAIN: https://linuxbrew.bintray.com
CPU: octa-core 32-bit merom
Homebrew Ruby: 2.3.3 => /usr/bin/ruby2.3
Clang: N/A
Git: 2.11.0 => /usr/bin/git
Perl: /home/linuxbrew/.linuxbrew/bin/perl => /home/kali/.linuxbrew/Cellar/perl/5.26.0_1/bin/perl
Python: /usr/bin/python => /usr/bin/python2.7
Ruby: /usr/bin/ruby => /usr/bin/ruby2.3
Java: openjdk version "1.8.0_141"
Kernel: Linux 4.9.0-3-686-pae i686 GNU/Linux
OS: Debian GNU/Linux 9.1 (stretch) (stretch)
Host glibc: 2.24
/usr/bin/gcc: 6.3.0
glibc: N/A
gcc: N/A
xorg: N/A
==> ENV
HOMEBREW_CC: gcc-6
HOMEBREW_CXX: g++-6
MAKEFLAGS: -j8
CMAKE_PREFIX_PATH: /home/kali/.linuxbrew
ACLOCAL_PATH: /home/kali/.linuxbrew/share/aclocal
PATH: /home/kali/.linuxbrew/Library/Homebrew/shims/linux/super:/usr/bin:/bin:/usr/sbin:/sbin

Logs:
     /home/kali/.cache/Homebrew/Logs/icu4c/01.configure.cc
     /home/kali/.cache/Homebrew/Logs/icu4c/00.options.out
     /home/kali/.cache/Homebrew/Logs/icu4c/01.configure
READ THIS: https://github.com/Linuxbrew/brew/blob/master/docs/Troubleshooting.md#troubleshooting
Please do not report this issue to Homebrew/brew or Homebrew/core, which support macOS only.

